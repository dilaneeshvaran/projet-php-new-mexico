@use "../partials/variables" as *;
@use "../partials/functions" as f;
@use "../partials/mixins" as *;
@use "sass:color";

@layer components {
    .form {
        @include flexbox(column, center, center);
        background-color: var(--background);
        padding: f.rem(16);
        margin-top: 0;

        &--large {
            .form__container {
                max-width: f.rem(600);
                padding: f.rem(24);
                text-align: left;
            }

            .form__title {
                font-size: f.rem(24);
                font-weight: 600;
                margin-bottom: f.rem(8);
            }

            .form__area {
                gap: f.rem(24);
            }
        }

        &__container {
            background: var(--surface);
            padding: f.rem(16); // Valeur par défaut pour mobile
            border-radius: f.rem(8);
            box-shadow: 0 f.rem(4) f.rem(10) var(--shadow-color);
            text-align: center;
            max-width: f.rem(400);
            width: 100%;
        }

        &__header {
            margin-bottom: f.rem(16); // Espacement ajusté pour mobile
        }

        &__title {
            color: var(--text-color);
            font-size: f.rem(20);
            margin-bottom: f.rem(8);
        }

        &__area,
        &__field {
            @include flexbox(column, null, null, f.rem(16));
        }

        &__label {
            color: var(--text-secondary);
            font-size: f.rem(14);
            font-weight: 500;
            margin-bottom: f.rem(8);
        }

        &__input {
            width: 100%;
            padding: f.rem(12);
            border: 1px solid var(--grey);
            border-radius: f.rem(6);
            font-size: f.rem(16);
            outline: none;
            transition: border-color 0.3s;
            background-color: var(--background);
            color: var(--text-primary);

            &:focus {
                border-color: var(--primary);
                box-shadow: 0 0 0 f.rem(2) color.scale(map-get($colors, "primary"), $alpha: -85%);
            }
        }

        &__textarea {
            @extend .form__input;
            min-height: f.rem(120);
            resize: vertical;
        }

        &__select {
            @extend .form__input;
            appearance: none;
            background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24' fill='none' stroke='currentColor' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
            background-repeat: no-repeat;
            background-position: right f.rem(12) center;
            background-size: f.rem(16);
            padding-right: f.rem(40);
        }

        &__actions {
            @include flexbox(column, null, null, f.rem(16));
            margin-top: f.rem(32);

            @media (min-width: screen("sm")) {
                @include flexbox(row, space-between, center);
            }
        }

        &__submit {
            background-color: var(--primary);
            color: var(--white);
            @include resetButton;
            padding: f.rem(12);
            border-radius: f.rem(6);
            font-size: f.rem(16);
            cursor: pointer;
            transition: background-color 0.3s;

            &:hover {
                background-color: var(--link-hover);
            }
        }

        &__links {
            margin-top: f.rem(24);
            font-size: f.rem(14);
            @include flexbox(column, null, center, f.rem(12));

            a {
                @include resetA;
                color: var(--primary);
                transition: color 0.3s;

                &:hover {
                    color: color.scale(map-get($colors, "primary"), $lightness: -10%);
                }
            }
        }

        &__back,
        &__delete {
            text-decoration: none;
            font-size: f.rem(14);
            transition: color 0.2s ease;
        }

        &__back {
            color: var(--text-secondary);

            &:hover {
                color: var(--text-primary);
            }
        }

        &__delete {
            color: var(--accent);

            &:hover {
                color: color.scale(map-get($colors, "accent"), $lightness: -10%);
            }
        }

        &__errors {
            background-color: color.scale(map-get($colors, "accent"), $lightness: 95%);
            border-left: f.rem(4) solid var(--accent);
            padding: f.rem(16);
            margin-bottom: f.rem(24);
            border-radius: 0 f.rem(6) f.rem(6) 0;

            p {
                color: var(--accent);
                margin: 0;
                font-size: f.rem(14);

                &:not(:last-child) {
                    margin-bottom: f.rem(8);
                }
            }
        }

        @media (min-width: screen("sm")) {
            .form__container {
                padding: f.rem(24);
            }
        }

        @media (min-width: screen("md")) {
            .form__container {
                padding: f.rem(32);
            }

            .form__title {
                font-size: f.rem(28);
            }
        }

        @media (min-width: screen("lg")) {
            .form__container {
                padding: f.rem(32);
            }
        }
    }
}
