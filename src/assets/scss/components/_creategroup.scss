@use "../partials/variables" as *;
@use "sass:color";
@use "../partials/functions" as f;
@use "../partials/mixins" as m;

@layer components {

    // Create Group Form Component
    .create-group {
        padding: 1rem;
        width: 100%;
        max-width: 100%;
        background-color: map-get($colors, "surface");

        // Error messages container
        .errors {
            color: map-get($colors, "red");
            margin-bottom: 1.25rem;
            padding: 0.75rem;
            border-radius: 0.375rem;
            background-color: color.scale(map-get($colors, "red"), $lightness: 95%);

            p {
                margin: 0.25rem 0;
                font-size: 0.875rem;
            }
        }

        // Form container
        form {
            display: flex;
            flex-direction: column;
            gap: 1.25rem;
        }

        // Label styling
        label {
            display: block;
            margin-bottom: 0.5rem;
            color: map-get($colors, "text-primary");
            font-weight: 500;
            font-size: 0.875rem;
        }

        // Input fields
        input[type="text"],
        textarea,
        select {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid map-get($colors, "border");
            border-radius: 0.375rem;
            background-color: map-get($colors, "surface");
            color: map-get($colors, "text-primary");
            font-size: 1rem;
            transition: border-color 0.2s ease;

            &:focus {
                outline: none;
                border-color: map-get($colors, "primary");
                box-shadow: 0 0 0 2px color.scale(map-get($colors, "primary"), $alpha: -85%);
            }
        }

        // Textarea specific styles
        textarea {
            min-height: 120px;
            resize: vertical;
        }

        // Submit button
        button[type="submit"] {
            width: 100%;
            padding: 0.75rem 1rem;
            background-color: map-get($colors, "primary");
            color: map-get($colors, "white");
            border: none;
            border-radius: 0.375rem;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s ease;

            &:hover {
                background-color: color.scale(map-get($colors, "primary"), $lightness: -10%);
            }

            &:active {
                background-color: color.scale(map-get($colors, "primary"), $lightness: -20%);
            }
        }

        // Back link
        a {
            display: inline-block;
            margin-top: 1rem;
            color: map-get($colors, "text-secondary");
            text-decoration: none;
            font-size: 0.875rem;
            transition: color 0.2s ease;

            &:hover {
                color: map-get($colors, "text-primary");
            }
        }

        // Responsive breakpoints
        @media (min-width: map-get($breakpoints, "sm")) {
            padding: 1.5rem;

            button[type="submit"] {
                width: auto;
                min-width: 150px;
            }
        }

        @media (min-width: map-get($breakpoints, "md")) {
            max-width: 600px;
            margin: 0 auto;
            padding: 2rem;
            border: 1px solid map-get($colors, "border");
            border-radius: 0.5rem;
            box-shadow: 0 4px 6px map-get($colors, "shadow");
        }
    }
}